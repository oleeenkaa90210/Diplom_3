{"name": "Счётчик Выполнено за сегодня увеличивается", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"AppHeader_header__link__3D_hX\" href=\"/feed\">...</a> is not clickable at point (284, 44). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=126.0.6478.183)\nStacktrace:\n0   chromedriver                        0x000000010506ea0c chromedriver + 4385292\n1   chromedriver                        0x0000000105067318 chromedriver + 4354840\n2   chromedriver                        0x0000000104c84b0c chromedriver + 281356\n3   chromedriver                        0x0000000104cccce0 chromedriver + 576736\n4   chromedriver                        0x0000000104ccb284 chromedriver + 569988\n5   chromedriver                        0x0000000104cc9414 chromedriver + 562196\n6   chromedriver                        0x0000000104cc85b0 chromedriver + 558512\n7   chromedriver                        0x0000000104cbdcfc chromedriver + 515324\n8   chromedriver                        0x0000000104cbd734 chromedriver + 513844\n9   chromedriver                        0x0000000104cffd24 chromedriver + 785700\n10  chromedriver                        0x0000000104cbbeec chromedriver + 507628\n11  chromedriver                        0x0000000104cbc8c4 chromedriver + 510148\n12  chromedriver                        0x00000001050363c8 chromedriver + 4154312\n13  chromedriver                        0x000000010503ae2c chromedriver + 4173356\n14  chromedriver                        0x000000010501bf84 chromedriver + 4046724\n15  chromedriver                        0x000000010503b718 chromedriver + 4175640\n16  chromedriver                        0x000000010500ef44 chromedriver + 3993412\n17  chromedriver                        0x00000001050591a8 chromedriver + 4297128\n18  chromedriver                        0x0000000105059324 chromedriver + 4297508\n19  chromedriver                        0x0000000105066f10 chromedriver + 4353808\n20  libsystem_pthread.dylib             0x0000000184b33034 _pthread_start + 136\n21  libsystem_pthread.dylib             0x0000000184b2de3c thread_start + 8", "trace": "self = <page_object.tests.order_feed_test.TestOrderFeedPage object at 0x104fc8f50>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6aad1e6a7cb5468c75780a4ecff2a343\")>\nopen_stellar_burgers = None\n\n    @allure.title('Счётчик Выполнено за сегодня увеличивается')\n    def test_completed_today(self, driver, open_stellar_burgers):\n        personal_account_page = PersonalAccountPage(driver)\n        main_page = MainPage(driver)\n        order_feed_page = OrderFeedPage(driver)\n    \n        personal_account_page.click_on_login_to_account()\n        personal_account_page.add_email()\n        personal_account_page.add_password()\n        personal_account_page.click_to_login_button()\n    \n        main_page.click_to_order_feed()\n        main_page.wait_order_feed_page()\n    \n        initial_completed_today = order_feed_page.get_counter_completed_for_day()\n        try:\n            initial_completed_today = int(initial_completed_today)\n        except Exception as e:\n            print(f\"NoSuchElementException: {e}\")\n        order_feed_page.go_to_main_page()\n        main_page.wait_main_page()\n        main_page.scroll_to_ingredient()\n        main_page.add_bun_to_order()\n        main_page.add_ingredient_to_order()\n        main_page.checkout()\n        main_page.wait_for_order_modal()\n        main_page.click_to_close_modal()\n>       main_page.click_to_order_feed()\n\npage_object/tests/order_feed_test.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_object/pages/main_page.py:15: in click_to_order_feed\n    self.click_to_element(MainPageLocators.ORDER_FEED)\npage_object/pages/base_page.py:23: in click_to_element\n    self.driver.find_element(*locator).click()\n../../../PycharmProjects/Sprint_6/.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../PycharmProjects/Sprint_6/.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../PycharmProjects/Sprint_6/.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1050bd760>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...000184b33034 _pthread_start + 136\\\\n21  libsystem_pthread.dylib             0x0000000184b2de3c thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"AppHeader_header__link__3D_hX\" href=\"/feed\">...</a> is not clickable at point (284, 44). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\nE         (Session info: chrome=126.0.6478.183)\nE       Stacktrace:\nE       0   chromedriver                        0x000000010506ea0c chromedriver + 4385292\nE       1   chromedriver                        0x0000000105067318 chromedriver + 4354840\nE       2   chromedriver                        0x0000000104c84b0c chromedriver + 281356\nE       3   chromedriver                        0x0000000104cccce0 chromedriver + 576736\nE       4   chromedriver                        0x0000000104ccb284 chromedriver + 569988\nE       5   chromedriver                        0x0000000104cc9414 chromedriver + 562196\nE       6   chromedriver                        0x0000000104cc85b0 chromedriver + 558512\nE       7   chromedriver                        0x0000000104cbdcfc chromedriver + 515324\nE       8   chromedriver                        0x0000000104cbd734 chromedriver + 513844\nE       9   chromedriver                        0x0000000104cffd24 chromedriver + 785700\nE       10  chromedriver                        0x0000000104cbbeec chromedriver + 507628\nE       11  chromedriver                        0x0000000104cbc8c4 chromedriver + 510148\nE       12  chromedriver                        0x00000001050363c8 chromedriver + 4154312\nE       13  chromedriver                        0x000000010503ae2c chromedriver + 4173356\nE       14  chromedriver                        0x000000010501bf84 chromedriver + 4046724\nE       15  chromedriver                        0x000000010503b718 chromedriver + 4175640\nE       16  chromedriver                        0x000000010500ef44 chromedriver + 3993412\nE       17  chromedriver                        0x00000001050591a8 chromedriver + 4297128\nE       18  chromedriver                        0x0000000105059324 chromedriver + 4297508\nE       19  chromedriver                        0x0000000105066f10 chromedriver + 4353808\nE       20  libsystem_pthread.dylib             0x0000000184b33034 _pthread_start + 136\nE       21  libsystem_pthread.dylib             0x0000000184b2de3c thread_start + 8\n\n../../../PycharmProjects/Sprint_6/.venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "attachments": [{"name": "stdout", "source": "655a61d3-c01b-4cc5-abf3-f483eed7f999-attachment.txt", "type": "text/plain"}], "start": 1721464865572, "stop": 1721464870689, "uuid": "c6b39012-d93c-499f-9692-676148958df4", "historyId": "25bc2588759908a3d21640e484938296", "testCaseId": "25bc2588759908a3d21640e484938296", "fullName": "page_object.tests.order_feed_test.TestOrderFeedPage#test_completed_today", "labels": [{"name": "parentSuite", "value": "page_object.tests"}, {"name": "suite", "value": "order_feed_test"}, {"name": "subSuite", "value": "TestOrderFeedPage"}, {"name": "host", "value": "MacBook-Pro-Ola"}, {"name": "thread", "value": "6949-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "page_object.tests.order_feed_test"}]}